import assert from 'assert';

/**
 * На IT-конференции присутствовали студенты из разных вузов со всей страны. Для каждого студента известен ID университета, в котором он учится.
 * Тимофей предложил Рите выяснить, из каких k вузов на конференцию пришло больше всего учащихся.
 *
 * Формат ввода
 * В первой строке дано количество студентов в списке —– n (1 ≤ n ≤ 15 000).
 * Во второй строке через пробел записаны n целых чисел —– ID вуза каждого студента.
 * Каждое из чисел находится в диапазоне от 0 до 10 000. В третьей строке записано одно число k.
 *
 * Формат вывода
 * Выведите через пробел k ID вузов с максимальным числом участников.
 * Они должны быть отсортированы по убыванию популярности (по количеству гостей от конкретного вуза).
 * Если более одного вуза имеет одно и то же количество учащихся, то выводить их ID нужно в порядке возрастания.
 */

function sortUniversities(students, k) {
  const hash = new Map();
  for (const id of students) {
    hash.set(id, (hash.get(id) || 0) + 1);
  }

  return [...hash.entries()]
    .sort(([id1, cnt1], [id2, cnt2]) => {
      if (cnt1 === cnt2) {
        return id1 - id2;
      } else {
        return cnt2 - cnt1;
      }
    })
    .slice(0, k)
    .map(([id]) => id);
}

function test(fn) {
  assert.deepStrictEqual(fn([1, 2, 3, 1, 2, 3, 4], 3), [1, 2, 3], fn.name);
  assert.deepStrictEqual(fn([1, 2, 3, 1, 2, 3, 4, 3], 3), [3, 1, 2], fn.name);
}

test(sortUniversities);
