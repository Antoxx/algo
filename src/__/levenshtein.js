import assert from 'assert';

/**
 * Расстоянием Левенштейна между двумя строками s и t называется количество атомарных изменений, с помощью которых можно одну строку
 * превратить в другую. Под атомарными изменениями подразумеваются: удаление одного символа, вставка одного символа, замена одного символа
 * на другой.
 *
 * Найдите расстояние Левенштейна для предложенной пары строк.
 * Выведите единственное число — расстояние между строками.
 *
 * Формат ввода
 * В первой строке дана строка s, во второй — строка t. Длины обеих строк не превосходят 1000. Строки состоят из маленьких латинских букв.
 *
 * Формат вывода
 * Выведите единственное число — расстояние между строками.
 */

// шаг по i символизирует удаление (D) из 1й строки, по j — вставку (I) в 1ю строку, а шаг по обоим индексам символизирует замену символа (R) или отсутствие изменений (M).
function levenstein(s, t) {}

function test(fn) {
  assert.deepStrictEqual(fn('abacaba', 'abaabc'), 2, fn.name);
}

test(levenstein);
